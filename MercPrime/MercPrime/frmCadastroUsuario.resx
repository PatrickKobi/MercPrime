<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        RU5ErkJggg==
</value>
  </data>
</root>